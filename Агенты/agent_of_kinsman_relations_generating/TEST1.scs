proc_test1 <- scp_program;
-> rrel_params: .proc_of_bloodline_relations_recovery_params 
		(*
		-> rrel_1: rrel_in: _entity;;
		-> rrel_2: rrel_in: _answer;;
		*);

->rrel_operators: .proc_test1_operator_set
(*
		->rrel_init: .proc_test1_operator_q 
		(*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [test1 start];;

			=> nrel_goto: .proc_test1_operator_1;;
		*);;

		-> .proc_test1_operator_1
		(*
			<-searchElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_const: nrel_grandfather;;
			-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc_1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _rel_template;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_t_definition;;

			=> nrel_then: .proc_test1_operator_2;;
			=> nrel_else: .proc_test1_operator_return;;
		*);;

		-> .proc_test1_operator_2
		(*
			<- sys_search;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _rel_template;;
			-> rrel_2: rrel_fixed: rrel_scp_const: _relators
				(*
					-> ...
					(*
						-> rrel_1: rrel_scp_const: _second_person;;
						-> rrel_2: rrel_fixed: rrel_scp_var: rrel_set: _answer;;
					*);;
				*);;
			-> rrel_3: rrel_fixed: rrel_scp_const: _sys_oper_3
				(*
					-> ...
					(*
						-> rrel_1: rrel_fixed: rrel_scp_const: _first_person;;
						-> rrel_2: rrel_fixed: rrel_scp_var: _entity;;
					*);;
				*);;

			=> nrel_then: .proc_test1_operator_return;;
			=> nrel_else: .proc_test1_operator_return;;
		*);;

		-> .proc_test1_operator_return
		(*
			<- return;;
		*);;
*);;
